//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ReportManager.ServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IReportManager")]
    public interface IReportManager {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportManager/getAlarmsByTimestamps", ReplyAction="http://tempuri.org/IReportManager/getAlarmsByTimestampsResponse")]
        Model.AlarmEntry[] getAlarmsByTimestamps(System.DateTime start, System.DateTime end);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportManager/getAlarmsByTimestamps", ReplyAction="http://tempuri.org/IReportManager/getAlarmsByTimestampsResponse")]
        System.Threading.Tasks.Task<Model.AlarmEntry[]> getAlarmsByTimestampsAsync(System.DateTime start, System.DateTime end);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportManager/getAlarmsByPriority", ReplyAction="http://tempuri.org/IReportManager/getAlarmsByPriorityResponse")]
        Model.AlarmEntry[] getAlarmsByPriority(Model.AlarmPriority priority);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportManager/getAlarmsByPriority", ReplyAction="http://tempuri.org/IReportManager/getAlarmsByPriorityResponse")]
        System.Threading.Tasks.Task<Model.AlarmEntry[]> getAlarmsByPriorityAsync(Model.AlarmPriority priority);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportManager/getTagValuesByTimestamps", ReplyAction="http://tempuri.org/IReportManager/getTagValuesByTimestampsResponse")]
        Model.TagValueEntry[] getTagValuesByTimestamps(System.DateTime start, System.DateTime end);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportManager/getTagValuesByTimestamps", ReplyAction="http://tempuri.org/IReportManager/getTagValuesByTimestampsResponse")]
        System.Threading.Tasks.Task<Model.TagValueEntry[]> getTagValuesByTimestampsAsync(System.DateTime start, System.DateTime end);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportManager/getAnalogInputValues", ReplyAction="http://tempuri.org/IReportManager/getAnalogInputValuesResponse")]
        Model.TagValueEntry[] getAnalogInputValues();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportManager/getAnalogInputValues", ReplyAction="http://tempuri.org/IReportManager/getAnalogInputValuesResponse")]
        System.Threading.Tasks.Task<Model.TagValueEntry[]> getAnalogInputValuesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportManager/getDigitalInputValues", ReplyAction="http://tempuri.org/IReportManager/getDigitalInputValuesResponse")]
        Model.TagValueEntry[] getDigitalInputValues();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportManager/getDigitalInputValues", ReplyAction="http://tempuri.org/IReportManager/getDigitalInputValuesResponse")]
        System.Threading.Tasks.Task<Model.TagValueEntry[]> getDigitalInputValuesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportManager/getValuesById", ReplyAction="http://tempuri.org/IReportManager/getValuesByIdResponse")]
        Model.TagValueEntry[] getValuesById(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportManager/getValuesById", ReplyAction="http://tempuri.org/IReportManager/getValuesByIdResponse")]
        System.Threading.Tasks.Task<Model.TagValueEntry[]> getValuesByIdAsync(string id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IReportManagerChannel : ReportManager.ServiceReference1.IReportManager, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ReportManagerClient : System.ServiceModel.ClientBase<ReportManager.ServiceReference1.IReportManager>, ReportManager.ServiceReference1.IReportManager {
        
        public ReportManagerClient() {
        }
        
        public ReportManagerClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ReportManagerClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ReportManagerClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ReportManagerClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Model.AlarmEntry[] getAlarmsByTimestamps(System.DateTime start, System.DateTime end) {
            return base.Channel.getAlarmsByTimestamps(start, end);
        }
        
        public System.Threading.Tasks.Task<Model.AlarmEntry[]> getAlarmsByTimestampsAsync(System.DateTime start, System.DateTime end) {
            return base.Channel.getAlarmsByTimestampsAsync(start, end);
        }
        
        public Model.AlarmEntry[] getAlarmsByPriority(Model.AlarmPriority priority) {
            return base.Channel.getAlarmsByPriority(priority);
        }
        
        public System.Threading.Tasks.Task<Model.AlarmEntry[]> getAlarmsByPriorityAsync(Model.AlarmPriority priority) {
            return base.Channel.getAlarmsByPriorityAsync(priority);
        }
        
        public Model.TagValueEntry[] getTagValuesByTimestamps(System.DateTime start, System.DateTime end) {
            return base.Channel.getTagValuesByTimestamps(start, end);
        }
        
        public System.Threading.Tasks.Task<Model.TagValueEntry[]> getTagValuesByTimestampsAsync(System.DateTime start, System.DateTime end) {
            return base.Channel.getTagValuesByTimestampsAsync(start, end);
        }
        
        public Model.TagValueEntry[] getAnalogInputValues() {
            return base.Channel.getAnalogInputValues();
        }
        
        public System.Threading.Tasks.Task<Model.TagValueEntry[]> getAnalogInputValuesAsync() {
            return base.Channel.getAnalogInputValuesAsync();
        }
        
        public Model.TagValueEntry[] getDigitalInputValues() {
            return base.Channel.getDigitalInputValues();
        }
        
        public System.Threading.Tasks.Task<Model.TagValueEntry[]> getDigitalInputValuesAsync() {
            return base.Channel.getDigitalInputValuesAsync();
        }
        
        public Model.TagValueEntry[] getValuesById(string id) {
            return base.Channel.getValuesById(id);
        }
        
        public System.Threading.Tasks.Task<Model.TagValueEntry[]> getValuesByIdAsync(string id) {
            return base.Channel.getValuesByIdAsync(id);
        }
    }
}
